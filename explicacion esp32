
Verificar si hay un paquete de pip en opkg:
En algunos sistemas basados en opkg puedes intentar:

bash
Copiar
opkg update && opkg install python3-pip
Si ese paquete no existe o no se instala, sigue con el siguiente paso.

Instalar pip manualmente:
Descarga el script de instalación de pip (get-pip.py) y ejecútalo con Python3. Por ejemplo:

bash
Copiar
wget https://bootstrap.pypa.io/get-pip.py
python3 get-pip.py
Esto instalará pip para Python 3. Si "wget" no está disponible, puedes usar "curl" o descargar el archivo desde otro equipo y transferirlo.

Instala la librería websocket-client:
Una vez instalado pip, ejecuta:

bash
Copiar
pip install websocket-client
O, si aún no reconoce el comando "pip", usa:

bash
Copiar
python3 -m pip install websocket-client
Con pip instalado, ya podrás ejecutar el comando de una sola línea para enviar el mensaje "UP" desde la terminal:

bash
Copiar
python3 -c "import websocket; ws = websocket.create_connection('ws://192.168.1.29/ws'); ws.send('UP'); ws.close()"
¿Te queda alguna duda o necesitas más detalles sobre alguno de estos pasos?



Explicación del código
Conexión WiFi:
Se incluye la biblioteca WiFi.h y se configuran las credenciales para conectarse a tu red. Al iniciar, el ESP32 se conecta y muestra la IP asignada.

Servidor TCP:
Se crea un objeto WiFiServer que escucha en el puerto 25000. Cuando un cliente se conecta, el firmware lee los comandos G-code línea por línea.

Interpretación de G-code:

G92: Reinicia la posición del motor según el valor de X (multiplicado por 110, según tu configuración).
G1: Mueve el motor a la posición indicada (también multiplicada por 110) y ajusta la velocidad si se especifica un parámetro F.
Control del motor:

Antes de mover, se activa el motor (se pone el pin ENABLE en LOW).
Se usa AccelStepper para gestionar la aceleración y la velocidad del motor.
Si no se reciben nuevos comandos y el motor ha llegado a su posición, se desactiva automáticamente después de 10 segundos.
Ejecución en el loop:
Se revisa constantemente la conexión TCP y se ejecutan los movimientos. La desactivación por inactividad se comprueba tanto dentro del ciclo del cliente como en el loop principal.

Este ejemplo puede servirte como punto de partida para adaptar tu firmware a ESP32 y controlar un motor a través de comandos G-code recibidos por WiFi. Recuerda que, dependiendo de tu hardware, quizás necesites ajustar la asignación de pines y la lógica de habilitación del driver.






